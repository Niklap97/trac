commit a85fc21a21f83862f68b4eccdf1d6fed9b39c25a
Author: Niklap97 <niklas@nitrokey.com>
Date:   Sat Jun 18 17:57:09 2022 +0200

    added session rename

diff --git a/trac/admin/tests/console-tests.txt b/trac/admin/tests/console-tests.txt
index f6cb61ecc..f6a35a811 100644
--- a/trac/admin/tests/console-tests.txt
+++ b/trac/admin/tests/console-tests.txt
@@ -58,6 +58,7 @@ session delete         Delete the session of the specified sid
 session list           List the name and email for the given sids
 session purge          Purge anonymous sessions older than given age or date
 session set            Set the name or email attribute of the given sid
+session rename         Set a new sid
 severity add           Add a severity value option
 severity change        Change a severity value
 severity list          Show possible ticket severities
diff --git a/trac/web/session.py b/trac/web/session.py
index df2d1bcde..f04a4a832 100644
--- a/trac/web/session.py
+++ b/trac/web/session.py
@@ -439,6 +439,13 @@ class SessionAdmin(Component):
                format.""" % hints,
                None, self._do_purge)
 
+        yield ('session rename', '<old-sid[:0|1]> <new-sid>',
+               """Set a new sid
+
+               Resets the sid attribute of the given sid.
+               """,
+               None, self._do_rename)
+
     @lazy
     def _valid_default_handlers(self):
         return sorted(handler.__class__.__name__
@@ -583,6 +590,26 @@ class SessionAdmin(Component):
                                       AND s.authenticated=0)
                 """)
 
+    def _do_rename(self, sid, newsid):
+        sid, authenticated = self._split_sid(sid)
+        with self.env.db_transaction as db:
+            if not db("""SELECT sid FROM session
+                         WHERE sid=%s AND authenticated=%s""",
+                         (sid, authenticated)):
+                raise AdminCommandError(_("Session '%(sid)s' not found",
+                                          sid=sid))
+            if newsid:
+                db("""
+                    UPDATE session
+                    SET sid=%s 
+                    WHERE sid =%s AND authenticated=%s
+                    """, (newsid, sid, authenticated))
+                db("""
+                    UPDATE session_attribute
+                    SET sid=%s
+                    WHERE sid =%s AND authenticated=%s
+                    """, (newsid, sid, authenticated))
+        self.env.invalidate_known_users_cache()
 
 def get_session_attribute(env, sid, authenticated, name, default=None):
     for row in env.db_query("""
